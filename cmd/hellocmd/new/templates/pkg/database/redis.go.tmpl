package database

import (
	"fmt"
	"sync"

	"github.com/gomodule/redigo/redis"
	perrors "github.com/pkg/errors"

	rediz "codeup.aliyun.com/uphicoo/gokit/pkg/database/redis"

	"uphicoo.com/uphicoo/{{ .Name }}/internal/config"
)

var (
	_rt          *rediz.RedizTemplate
	_redisLock   sync.Mutex
	_redisInited = false
)

// InitRedisTemplate 初始化 RedizTemplate 实例
func InitRedisTemplate(conf config.RedisConfig) (err error) {
	// 不实例化
	if !conf.Enabled {
		return nil
	}
	if _redisInited {
		return nil
	}

	if _rt == nil {
		_redisLock.Lock()
		defer _redisLock.Unlock()
		if _rt == nil {
			_rt, err = rediz.NewRedizTemplate(populateRedisAddress(conf), conf.Password, redis.DialDatabase(conf.DB))
			err = _rt.Ping()
			if err != nil {
				return perrors.Errorf("database.redis 数据库 PING 失败,请核实配置信息:%w", err)
			}
			_redisInited = true
		}
	}

	return
}

func RedisTemplate() *rediz.RedizTemplate {
	return _rt
}

func populateRedisAddress(conf config.RedisConfig) string {
	return fmt.Sprintf("%s:%d", conf.Host, conf.Port)
}
